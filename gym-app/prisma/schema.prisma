// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  email        String       @unique
  name         String
  dni          String       @unique
  phone        String?
  role         Role         @default(ALUMNO)
  createdAt    DateTime     @default(now())
  routineHistories RoutineHistory[]
}

model Exercise {
  id           String       @id @default(uuid())
  name         String       @unique
  description  String?
  createdBy    String?      // ID del profesor que lo creó (opcional)
  createdAt    DateTime     @default(now())
  routineExercises RoutineExercise[]
}

model RoutineHistory {
  id           String       @id @default(uuid())
  userId       String
  user         User         @relation(fields: [userId], references: [id])
  createdBy    String       // ID del profesor que asignó la rutina
  createdAt    DateTime     @default(now())
  startDate    DateTime     // Fecha de inicio
  endDate      DateTime?    // Fecha de fin (opcional)
  status       RoutineStatus @default(ACTIVE) // Estado de la rutina
  routineExercises RoutineExercise[]
}

model RoutineExercise {
  id           String       @id @default(uuid())
  routineId    String
  routine      RoutineHistory @relation(fields: [routineId], references: [id])
  exerciseId   String
  exercise     Exercise     @relation(fields: [exerciseId], references: [id])
  dayOfWeek    DayOfWeek    // Día de la semana
  sets         Int          // Número de series
  reps         Int          // Número de repeticiones
  notes        String?      // Notas opcionales
}

enum Role {
  ALUMNO
  PROFESSOR
  ADMIN
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum RoutineStatus {
  ACTIVE      // Rutina actualmente en uso
  COMPLETED   // Rutina finalizada
  PLANNED     // Rutina programada para el futuro
}